[null],Language,License,Mutual auth,Encrypts,Verify mode,Agent-less,Have a GUI,First release,Latest stable release
Ansible,Python,GPLv3+,<ref name="Key Pair">Key pair: uses public/private key pairs and key fingerprints for mutual authentication  like SSH.</ref>,<ref name="Secure Shell">Secure Shell: Uses the Secure Shell protocol for encryption.</ref>,[null],[null],<ref></ref>,2012-03-08,2018-12-13 2.7.5<ref name="Ansible_releases_on_PyPI"></ref><ref name="Ansible_releases_on_ansible.com"></ref><ref></ref>
Bcfg2,Python,BSD 2-clause<ref></ref>,<ref name="Certificate and Passwords">Certificate and Passwords: Uses SSL X.509 certificate and fingerprint for clients to authenticate server  and passwords for server to authenticate clients; clients should only share the same password if they are allowed access to each other's configuration data.</ref>,<ref name="SSL">SSL: Uses the Secure Sockets Layer  Transport Layer Security (TLS) for encryption.</ref>,<ref name="Verify-Bcfg2">Full support for non-modifying determination of node compliance  including nodes not previously modified by a Bcfg2 configuration pass.</ref>,[null],<ref>http://docs.bcfg2.org/reports/dynamic.html#screenshots</ref>,2004-08-11<ref name="autogenerated1"></ref>,2015-06-11 1.3.6<ref name="autogenerated1"/>
Capistrano,Ruby,MIT License,[null],<ref name="Secure Shell"/>,[null],<ref name="Secure Shell"/>,[null],2005,2017-03-08 4.4.2
cdist,Python,GPLv3+,<ref name="Key Pair"/>,<ref name="Secure Shell"/>,[null],[null],[null],2010,2018-04-20 4.8.4<ref>https://www.nico.schottelius.org/blog/cdist-4.8.4-released/</ref>
Chef,Ruby  Erlang,Apache 2.0,<ref name="RSA Shared Keys">Per request signed headers and pre-shared keys.</ref>,<ref name="SSLpayload">Payload encryption via SSL if HTTPS proxy is configured.</ref>,<ref name="Verify-Chef">Chef 10.14.0+ (called why-run mode)</ref><ref></ref>,[null],[null],2009-01-15 0.5.0,2019-01-28 14.10.9 (client) <ref></ref> 2018-02-13 12.17.33 (server)<ref></ref>
CFEngine,C<ref name="CFEngine Source Code"></ref>,GPLv3<ref></ref>,<ref name="Key Pair" />,<ref name="TLS">TLS: Uses TLS. </ref>,<ref name="Dry-run">Called dry-run  used to verify what would happen</ref><ref></ref>,[null],<ref name="CFEngine Enterprise"></ref>,1993,2019-12-18 3.15.0 <ref name="CFEngine 3.15.0 Release"></ref> 2019-12-06 3.12.3 <ref name="CFEngine 3.12.3 Release"></ref> 2019-12-06 3.10.7<ref name="CFEngine 3.10.7 Release"></ref>
ISconf,Python,GPL<ref></ref>,<ref name="HMAC">HMAC: Uses HMAC signatures on all network traffic.</ref>,<ref>Improved security which would include an encrypted  mutually authenticated  peer-to-peer message bus is tracked here .</ref>,[null],[null],[null],1998,2006-08-13 4.2.8.233
Juju,Python  Go<ref></ref>,Affero General Public License,<ref name="Key Pair"/>,<ref name="SSL" />,[null],[null],<ref></ref>,2010-09-17<ref></ref>,2019-10-30 2.7.0<ref></ref>
Local ConFiGuration system (LCFG),Perl,GPL,<ref>LCFG does not provide its own transport mechanism; it relies on an external program  most often Apache. Using Apache it should be possible to do mutual authentication in several ways; however the documentation at The Complete Guide to LCFG  Section 9.4: Authorization and Security  shows access control based on IP address ranges  implying that the client does not authenticate itself to the server via an SSL certificate; it also does not mention if the LCFG client checks the validity of the server's SSL certificate (such as via a per-site fingerprint distributed with the client  or a chain of trust to an accredited CA). It mentions that there can be a per-client password in the profile  but also states that "The contents of the LCFG profile should be considered public".</ref>,<ref>LCFG supports encrypted communications channels (SSL via Apache); however the documentation at The Complete Guide to LCFG  Section 9.4: Authorization and Security  states that "The contents of the LCFG profile should be considered public".</ref>,[null],[null],[null],1994,Weekly Releases
NOC,Python,BSD License 2.0,<ref name="Key Pair"/>,<ref name="Secure Shell"/>,[null],[null],[null],2012-03-08,2015-05-20 15.05.1<ref></ref>
OCS Inventory NG with GLPI,Perl  PHP  C++,GPL,<ref>Server authenticates to client  but client does not authenticate to server. See OCS Inventory NG Installation and Administration guide  page 114.</ref>,<ref name="SSL" />,[null],[null],[null],2003,2014-07-13<ref></ref>
Open pc server integration (Opsi),Python  Java,GPL,[null],<ref name="SSL" />,[null],[null],[null],2004,2013-03-01 4.0.3
PIKT,C,GPLv2+<ref></ref>,<ref>PIKT uses shared secret keys for mutual authentication. "As an option  you can use secret key authentication to prove the master's identity to the slave. [...] If one managed to crack any system in the PIKT domain  one would have access to all common secrets. To solve this problem  you may use per-slave uid  gid  and private_key settings." - from Security Considerations.</ref>,<ref>"For file installs  file fetches (to diff against the central configuration)  and command executions  you can optionally encrypt all such data traffic between master and slave." - from Security Considerations.</ref>,[null],[null],[null],1998<ref></ref>,2007-09-10 1.19.0
Puppet,C++ & Clojure from 4.0 <ref></ref> Ruby before then,Apache from 2.7.0  GPL before then,<ref name="Certificates">Certificates: Uses SSL X.509 Certificates for mutual authentication. Can use any SSL Certificate Authority to manage the Public Key Infrastructure.</ref>,<ref name="SSL" />,<ref name="Verify-Puppet">Using the --noop option</ref><ref></ref>,[null],<ref></ref>,2005-08-30<ref></ref>,2019-01-15 6.0.5<ref></ref>
Quattor,Perl  Python,Apache 2.0<ref name="Opensource.org"></ref><ref name="Eu-datagrid.web.cern.ch"></ref>,<ref>"Client to server authentication and vice versa: on one hand  this allows to enforce access policies to sensitive data according to the client "name"  on the other hand  clients are guaranteed to talk to the original server." - from Quattor Installation and User Guide: Version 1.1.x  page 70</ref>,<ref>"[...] secure information transfer  since data are encrypted: this prevents eavesdroppers from obtaining information in transit over the network." - from Quattor Installation and User Guide: Version 1.1.x  page 70</ref>,[null],[null],[null],2005-04-01<ref></ref>,2018-07-3 18.6.0<ref></ref>
Radmind,C,BSD<ref></ref>,<ref>"SSL certificates can also be used to authenticate both the Radmind server and the managed clients  regardless of DNS or IP-address variation." - from Radmind: The Integration of Filesystem Integrity Checking with Filesystem Management</ref>,<ref>"For network security  Radmind supports SSL-encrypted links. This allows nodes on insecure networks to be updated securely." - from Radmind: The Integration of Filesystem Integrity Checking with Filesystem Management</ref>,[null],[null],[null],2002-03-26<ref></ref>,2008-10-08 1.13.0<ref></ref>
Rex,Perl,Apache,<ref name="Key Pair"/>,<ref name="Secure Shell"/>,[null],[null],[null],2010-11-05 0.9.0<ref></ref>,2017-12-03 1.6.0<ref></ref>
Rudder,C  Scala and Rust,GPLv3 and Apache 2.0<ref></ref>,<ref name="Key Pair" />,<ref name="SSL" />,<ref name="Audit-Rudder">Using the Audit mode</ref><ref></ref>,[null],[null],2011-10-31,2019-05-12 5.0.15<ref></ref>
SmartFrog,Java,LGPL,<ref name="Smartfrog Security">See Using the new SmartFrog Security</ref>,<ref name="Smartfrog Security" />,[null],[null],[null],2004-02-11,2009-01-26 3.16.004<ref></ref><ref name="Smartfrog Releases">The release the Smartfrog pushes from its own site is 3.17.014 of 2009-09-04</ref>
Salt<ref>Salt is an open source tool to manage your infrastructure. Easy enough to get running in minutes and fast enough to manage tens of thousands of servers</ref>,Python<ref></ref>,Apache 2.0<ref></ref>,<ref name="Salt Security"></ref>,<ref name="Salt Security" />,[null],Both<ref></ref><ref></ref>,<ref></ref><ref></ref>,2011-03-17 0.6.0<ref></ref>,2019-02-25 v2019.2.0<ref></ref>
Spacewalk,Java (C  Perl  Python  PL/SQL),GPLv2,[null],[null],[null],[null],[null],2008-06<ref name="Spacewalk inception date"></ref>,2019-01-14 2.9<ref></ref>
STAF,C++,CPL<ref></ref>,<ref name="Network Trust">Network Trust: Trusts the network  like rsh.</ref><ref name="User-only Auth">User-only Auth: User authenticates to server via password  but uses Network Trust to authenticate user to server  like telnet.</ref>,<ref>There is a feature request for a Secure TCP/IP Connection Provider  and one of the developers stated on 2007-04-05 that "You will need to download the source code for OpenSSL and point the build files at it. Other than that  it should just work."  so it looks like there may be working encryption if you build from scratch instead of using the prebuilt binaries. It is unclear what if any authentication building against OpenSSL would give STAF.</ref>,[null],[null],[null],1998-02-16<ref></ref>,2012-12-16 3.4.16 <ref></ref>
Synctool<ref>Synctool aims to be easy to understand and use. It's built in Python and uses SSH and Rsync.</ref>,Python<ref></ref>,GPLv2<ref></ref>,<ref name="Synctool Security">Secure Shell: Uses the Secure Shell protocol for authentication.</ref>,<ref name="Secure Shell"/>,<ref name="Verify-Synctool">Synctool performs a dry-run by default  and only modifies things when invoked with '--fix'.</ref>,<ref name="What-is-synctool"></ref>,[null],2003<ref></ref>,2014-06-15 6.1<ref></ref>
[null],Language,License,Mutual auth,Encrypts,Verify mode,Agent-less,Have a GUI,First release,Latest stable release
